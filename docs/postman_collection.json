{
	"info": {
		"_postman_id": "90e6bac7-b2ec-4d1c-88f4-fc25c747c1ed",
		"name": "Spring Rapid REST",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET All Entities",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response array is not empty\", function () {\r",
							"    pm.expect(JSON.parse(pm.response.text()).length).to.not.equal(0)\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/v1/{{entity}}s",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"{{entity}}s"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Single Entity",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.sendRequest(pm.collectionVariables.get(\"baseUrl\")+\"/api/v1/\"+pm.collectionVariables.get(\"entity\")+\"s/\",(error,response)=>{\r",
							"    pm.collectionVariables.set(\"id\", response.json()[0].id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Entity Id is the same as in the request\", function () {\r",
							"    pm.expect(pm.response.json().id).to.eql(pm.collectionVariables.get(\"id\"))\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/v1/{{entity}}/{{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"{{entity}}",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Entity History",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.sendRequest(pm.collectionVariables.get(\"baseUrl\")+\"/api/v1/\"+pm.collectionVariables.get(\"entity\")+\"s/\",(error,response)=>{\r",
							"    pm.collectionVariables.set(\"id\", response.json()[1].id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response array is not empty\", function () {\r",
							"    pm.expect(JSON.parse(pm.response.text()).length).to.not.equal(0)\r",
							"});\r",
							"pm.test(\"All History Entries refer to the correct entity\",() => {\r",
							"    _.each(pm.response.json(), (history) => {\r",
							"        pm.expect(history.entity.id).to.eq(pm.collectionVariables.get(\"id\"))\r",
							"    })\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/v1/{{entity}}/{{id}}/history",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"{{entity}}",
						"{{id}}",
						"history"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Entity attributes are set correctly\",function(){\r",
							"    pm.expect(jsonData.id).to.not.undefined;\r",
							"    pm.expect(jsonData.manufacturer).to.eq(\"Mercedes Benz\")\r",
							"    pm.expect(jsonData.model).to.eq(\"EQA 300 4MATIC\")\r",
							"    pm.expect(jsonData.year).to.eq(2021)\r",
							"    pm.expect(jsonData.weight).to.eq(2005.0)\r",
							"    pm.expect(jsonData.color).to.eq(\"red\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"manufacturer\":\"Mercedes Benz\",\r\n    \"model\":\"EQA 300 4MATIC\",\r\n    \"year\": 2021,\r\n    \"weight\":2005.0,\r\n    \"color\":\"red\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/{{entity}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"{{entity}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Entity",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.sendRequest(pm.collectionVariables.get(\"baseUrl\")+\"/api/v1/\"+pm.collectionVariables.get(\"entity\")+\"s/\",(error,response)=>{\r",
							"    pm.collectionVariables.set(\"id\", response.json()[0].id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Entity attributes are set correctly\",function(){\r",
							"    pm.expect(jsonData.id).to.not.undefined;\r",
							"    pm.expect(jsonData.model).to.eq(\"B Class\")\r",
							"    pm.expect(jsonData.weight).to.eq(1285.0)\r",
							"    pm.expect(jsonData.color).to.eq(\"blue\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"model\":\"B Class\",\r\n    \"weight\": 1285.0,\r\n    \"color\":\"blue\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/{{entity}}/{{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"{{entity}}",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Entity",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.sendRequest(pm.collectionVariables.get(\"baseUrl\")+\"/api/v1/\"+pm.collectionVariables.get(\"entity\")+\"s/\",(error,response)=>{\r",
							"    pm.collectionVariables.set(\"id\", response.json()[0].id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.sendRequest(pm.collectionVariables.get(\"baseUrl\")+\"/api/v1/car/\"+pm.collectionVariables.get(\"id\"), (error,response)=>{\r",
							"    pm.test(\"Item does not exist anymore\", function () {\r",
							"        pm.expect(response.code).to.not.eq(200)\r",
							"    })\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/v1/{{entity}}/{{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"{{entity}}",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "",
			"type": "default"
		},
		{
			"key": "entity",
			"value": "",
			"type": "default"
		},
		{
			"key": "id",
			"value": ""
		}
	]
}